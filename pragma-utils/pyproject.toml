[build-system]
requires = ["hatchling", "hatch-fancy-pypi-readme>=22.5.0"]
build-backend = "hatchling.build"

[project]
name = "pragma-utils"
description = "Utils functions shared accross Pragma python packages."
readme = "README.md"
requires-python = ">=3.11,<3.13"
license = "MIT"
authors = [
    { name = "0xevolve", email = "matthias@pragma.build" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

dependencies = [
    "pydantic>=2.7.4",
    "boto3>=1.28.61",
    "moto[s3,secretsmanager]>=4.2.5",
    "google-cloud-secret-manager>=2.23.1",
]

dynamic = ["version"]

[tool.hatch.version]
path = "pragma_utils/__init__.py"

[project.urls]
Homepage = "https://pragma.build"
Repository = "https://github.com/Astraly-Labs/pragma-sdk"
Documentation = "https://docs.pragma.build"

[tool.hatch.metadata]
allow-direct-references = true

[project.optional-dependencies]
dev = [
    "poethepoet>=0.26.1",
    "ruff>=0.4",
    "mypy>=1.10",
    "coverage>=7.2.1",
    "pytest>=7.2.2",
    "pytest-asyncio>=0.21.1",
    "pytest-mock>=3.6.1",
    "pytest-xdist>=3.2.1",
    "pytest-cov>=4.0.0",
    "setuptools>=70.1.0",
    "pytest-rerunfailures>=12.0",
]

typing = [
    "mypy>=1.10",
    "types-requests>=2.26.0",
    "types-deprecated>=1.2.9",
]

[tool.mypy]
python_version = "3.12"
namespace_packages = true
explicit_package_bases = true
show_error_codes = true
warn_return_any = true
ignore_missing_imports = true
exclude = ["tests"]
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]

[tool.coverage.run]
source = ["pragma_utils"]

[tool.coverage.report]
omit = ["*_test.py", "tests/*"]
skip_empty = true

[tool.poe.tasks]
format = "ruff format ."
format_check = "ruff format . --check"
lint = "ruff check ."
typecheck = "mypy pragma_utils"
test = "coverage run -m pytest -v tests/ -s"
