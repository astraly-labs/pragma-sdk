[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "vrf-listener"
authors = [
    {name = "0xevolve", email = "matthias@pragma.build"}
]
description = "VRF pushing service for Pragma."
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
requires-python = ">=3.11,<3.13"
dependencies = [
    "pragma-sdk",
    "pragma-utils",
    "click>=8.1.0",
    "types-pyyaml>=6.0.12.20240311",
    "pydantic>=2.7.4",
    "apibara==0.8.0",
    "pymongo==4.8.0",
    "asgiref>=3.8.0",
]

dynamic = ["version"]

[project.urls]
homepage = "https://pragma.build"
repository = "https://github.com/Astraly-Labs/pragma-sdk"
documentation = "https://docs.pragma.build"

[project.scripts]
vrf_listener = 'vrf_listener.main:cli_entrypoint'

[tool.hatch.version]
path = "vrf_listener/__init__.py"

[tool.uv.sources]
pragma_sdk = { path = "../pragma-sdk" }
pragma_utils = { path = "../pragma-utils" }

[tool.hatch.metadata]
allow-direct-references = true

[dependency-groups]
dev = [
    "poethepoet>=0.26.1",
    "ruff>=0.4",
    "mypy>=1.10",
    "coverage>=7.2.1",
    "pytest>=7.2.2",
    "pytest-asyncio>=0.21.1",
    "pytest-mock>=3.6.1",
    "pytest-xdist>=3.2.1",
    "pytest-cov>=4.0.0",
    "setuptools>=70.1.0",
    "pytest-rerunfailures>=12.0",
    "testcontainers>=4.8.0",
]

typing = [
    "mypy>=1.10",
    "types-requests>=2.26.0",
    "types-deprecated>=1.2.9",
]

extra = [
    { include-group = "dev" },
    { include-group = "typing" },
]

[tool.poe.tasks]
typecheck = "mypy vrf_listener"
test = "coverage run -m pytest --net=devnet -v --reruns 5 --only-rerun aiohttp.client_exceptions.ClientConnectorError tests/ -s"
benchmark = "python benchmark/main.py"

[tool.mypy]
python_version = "3.12"
namespace_packages = true
explicit_package_bases = true
show_error_codes = true
warn_return_any = true
ignore_missing_imports = true
exclude = ["tests", "benchmarks"]
mypy_path = ["../pragma-utils", "../pragma-sdk"]
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]

[tool.coverage.run]
source = ["vrf_listener"]

[tool.coverage.report]
omit = ["*_test.py", "tests/*", "benchmark/*"]
skip_empty = true
