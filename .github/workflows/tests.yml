---
name: Task - Build & Integration Tests

on:
  workflow_dispatch:
  workflow_call:

env:
  PYTHON_VERSION: 3.12

jobs:
  tests:
    continue-on-error: true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          [
            pragma-utils,
            pragma-sdk,
            price-pusher,
            vrf-listener,
            checkpointer,
            lp-pricer,
          ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
      - uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
      - name: Install dependencies
        run: |
          cd ${{ matrix.package }}
          uv sync --python ${{ env.PYTHON_VERSION }} --all-extras

      - name: Cache contracts
        id: cache-contracts
        uses: actions/cache@v3
        with:
          path: ./pragma-oracle/pragma-oracle/target
          key: ${{ runner.os }}-contracts-${{ hashFiles('./pragma-oracle/pragma-oracle/src') }}

      - uses: software-mansion/setup-scarb@v1
        with:
          tool-versions: pragma-oracle/.tool-versions

      - name: Compile contracts
        if: steps.cache-contracts.outputs.cache-hit != 'true'
        working-directory: ./pragma-oracle/pragma-oracle
        run: |
          scarb -V
          scarb build

      - name: Check ABIs are up-to-date
        run: |
          # Find and compare *.sierra.json files in both directories
          for file in $(find ./pragma-oracle/pragma-oracle/target/dev -type f -name "*.sierra.json"); do
            # Extract the relative path of the file for comparison
            rel_path=${file#./pragma-oracle/pragma-oracle/target/dev}
            # Use diff to compare the file with its counterpart in the SDK directory
            diff "$file" "pragma-sdk/pragma_sdk/onchain/abis$rel_path" || (echo "Error: $rel_path in pragma-oracle/target does not match with pragma-sdk/pragma_sdk/onchain/abis/" && exit 1)
          done
      - name: Install rust
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env

      - name: Verify Rust and Cargo installation
        run: |
          rustc --version
          cargo --version

      - uses: Swatinem/rust-cache@v2
      - name: Install starknet-devnet
        run: cargo install starknet-devnet
      - name: Run tests
        run: |
          # TODO: The tests loop forever if we don't run them one by one for some packages.
          # See: https://github.com/astraly-labs/pragma-sdk/issues/153
          cd ${{ matrix.package }}
          if [ "${{ matrix.package }}" = "pragma-sdk" ]; then
            uv run poe test_client
            uv run poe test_vrf
            uv run poe test_fetchers
            uv run poe test_merkle_feed
            uv run poe test_unit
            uv run poe test_update_client
          else
            uv run poe test
          fi
      - name: Generate coverage in XML
        run: |
          cd ${{ matrix.package }}
          uv run coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
