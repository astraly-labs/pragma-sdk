# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: pragma_sdk/schema/entries.proto
# Protobuf Python Version: 5.29.3
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder

_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC, 5, 29, 3, "", "pragma_sdk/schema/entries.proto"
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x1fpragma_sdk/schema/entries.proto\x12\rpragma_common"$\n\x07UInt128\x12\x0b\n\x03low\x18\x01 \x01(\x04\x12\x0c\n\x04high\x18\x02 \x01(\x04"#\n\x04Pair\x12\x0c\n\x04\x62\x61se\x18\x01 \x01(\t\x12\r\n\x05quote\x18\x02 \x01(\t"+\n\x08\x42idOrAsk\x12\r\n\x05price\x18\x01 \x01(\x01\x12\x10\n\x08quantity\x18\x02 \x01(\x01"p\n\rOrderbookData\x12\x11\n\tupdate_id\x18\x01 \x01(\x04\x12%\n\x04\x62ids\x18\x02 \x03(\x0b\x32\x17.pragma_common.BidOrAsk\x12%\n\x04\x61sks\x18\x03 \x03(\x0b\x32\x17.pragma_common.BidOrAsk"\xb7\x02\n\nPriceEntry\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x11\n\x07noChain\x18\x02 \x01(\x08H\x00\x12%\n\x05\x63hain\x18\x03 \x01(\x0e\x32\x14.pragma_common.ChainH\x00\x12!\n\x04pair\x18\x04 \x01(\x0b\x32\x13.pragma_common.Pair\x12\x13\n\x0btimestampMs\x18\x05 \x01(\x03\x12%\n\x05price\x18\x06 \x01(\x0b\x32\x16.pragma_common.UInt128\x12&\n\x06volume\x18\x07 \x01(\x0b\x32\x16.pragma_common.UInt128\x12\x16\n\x0cnoExpiration\x18\x08 \x01(\x08H\x01\x12\x1d\n\x13\x65xpirationTimestamp\x18\t \x01(\x03H\x01\x42\r\n\x0b\x63hainOptionB\x12\n\x10\x65xpirationOption"\xed\x01\n\x0eOrderbookEntry\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x35\n\x0einstrumentType\x18\x02 \x01(\x0e\x32\x1d.pragma_common.InstrumentType\x12!\n\x04pair\x18\x03 \x01(\x0b\x32\x13.pragma_common.Pair\x12\x30\n\x04type\x18\x04 \x01(\x0e\x32".pragma_common.OrderbookUpdateType\x12*\n\x04\x64\x61ta\x18\x05 \x01(\x0b\x32\x1c.pragma_common.OrderbookData\x12\x13\n\x0btimestampMs\x18\x06 \x01(\x03"r\n\x10\x46undingRateEntry\x12\x0e\n\x06source\x18\x01 \x01(\t\x12!\n\x04pair\x18\x02 \x01(\x0b\x32\x13.pragma_common.Pair\x12\x16\n\x0e\x61nnualizedRate\x18\x03 \x01(\x01\x12\x13\n\x0btimestampMs\x18\x04 \x01(\x03"q\n\x11OpenInterestEntry\x12\x0e\n\x06source\x18\x01 \x01(\t\x12!\n\x04pair\x18\x02 \x01(\x0b\x32\x13.pragma_common.Pair\x12\x14\n\x0copenInterest\x18\x03 \x01(\x01\x12\x13\n\x0btimestampMs\x18\x04 \x01(\x03"\xa1\x01\n\x0bVolumeEntry\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x35\n\x0einstrumentType\x18\x02 \x01(\x0e\x32\x1d.pragma_common.InstrumentType\x12!\n\x04pair\x18\x03 \x01(\x0b\x32\x13.pragma_common.Pair\x12\x13\n\x0bvolumeDaily\x18\x04 \x01(\x01\x12\x13\n\x0btimestampMs\x18\x05 \x01(\x03"\xe1\x01\n\nTradeEntry\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x35\n\x0einstrumentType\x18\x02 \x01(\x0e\x32\x1d.pragma_common.InstrumentType\x12!\n\x04pair\x18\x03 \x01(\x0b\x32\x13.pragma_common.Pair\x12\x0f\n\x07tradeId\x18\x04 \x01(\t\x12&\n\x04side\x18\x05 \x01(\x0e\x32\x18.pragma_common.TradeSide\x12\x0c\n\x04size\x18\x06 \x01(\x01\x12\r\n\x05price\x18\x07 \x01(\x01\x12\x13\n\x0btimestampMs\x18\x08 \x01(\x03*$\n\x0eInstrumentType\x12\x08\n\x04SPOT\x10\x00\x12\x08\n\x04PERP\x10\x01*\xb6\x01\n\x05\x43hain\x12\x0c\n\x08STARKNET\x10\x00\x12\n\n\x06SOLANA\x10\x01\x12\x07\n\x03SUI\x10\x02\x12\t\n\x05\x41PTOS\x10\x03\x12\x0c\n\x08\x45THEREUM\x10\x04\x12\x08\n\x04\x42\x41SE\x10\x05\x12\x0c\n\x08\x41RBITRUM\x10\x06\x12\x0c\n\x08OPTIMISM\x10\x07\x12\n\n\x06ZKSYNC\x10\x08\x12\x0b\n\x07POLYGON\x10\t\x12\x07\n\x03\x42NB\x10\n\x12\r\n\tAVALANCHE\x10\x0b\x12\n\n\x06GNOSIS\x10\x0c\x12\x0e\n\nWORLDCHAIN\x10\r*/\n\x13OrderbookUpdateType\x12\n\n\x06UPDATE\x10\x00\x12\x0c\n\x08SNAPSHOT\x10\x01*\x1e\n\tTradeSide\x12\x07\n\x03\x42UY\x10\x00\x12\x08\n\x04SELL\x10\x01\x62\x06proto3'
)

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(
    DESCRIPTOR, "pragma_sdk.schema.entries_pb2", _globals
)
if not _descriptor._USE_C_DESCRIPTORS:
    DESCRIPTOR._loaded_options = None
    _globals["_INSTRUMENTTYPE"]._serialized_start = 1461
    _globals["_INSTRUMENTTYPE"]._serialized_end = 1497
    _globals["_CHAIN"]._serialized_start = 1500
    _globals["_CHAIN"]._serialized_end = 1682
    _globals["_ORDERBOOKUPDATETYPE"]._serialized_start = 1684
    _globals["_ORDERBOOKUPDATETYPE"]._serialized_end = 1731
    _globals["_TRADESIDE"]._serialized_start = 1733
    _globals["_TRADESIDE"]._serialized_end = 1763
    _globals["_UINT128"]._serialized_start = 50
    _globals["_UINT128"]._serialized_end = 86
    _globals["_PAIR"]._serialized_start = 88
    _globals["_PAIR"]._serialized_end = 123
    _globals["_BIDORASK"]._serialized_start = 125
    _globals["_BIDORASK"]._serialized_end = 168
    _globals["_ORDERBOOKDATA"]._serialized_start = 170
    _globals["_ORDERBOOKDATA"]._serialized_end = 282
    _globals["_PRICEENTRY"]._serialized_start = 285
    _globals["_PRICEENTRY"]._serialized_end = 596
    _globals["_ORDERBOOKENTRY"]._serialized_start = 599
    _globals["_ORDERBOOKENTRY"]._serialized_end = 836
    _globals["_FUNDINGRATEENTRY"]._serialized_start = 838
    _globals["_FUNDINGRATEENTRY"]._serialized_end = 952
    _globals["_OPENINTERESTENTRY"]._serialized_start = 954
    _globals["_OPENINTERESTENTRY"]._serialized_end = 1067
    _globals["_VOLUMEENTRY"]._serialized_start = 1070
    _globals["_VOLUMEENTRY"]._serialized_end = 1231
    _globals["_TRADEENTRY"]._serialized_start = 1234
    _globals["_TRADEENTRY"]._serialized_end = 1459
# @@protoc_insertion_point(module_scope)
